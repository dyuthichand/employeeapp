{"version":3,"sources":["component/SkillChart.js","component/StaffList.js","component/Proficiency.js","component/SkillList.js","component/SkillChartDemo.js","component/ChartDisplay.js","component/AddSkill.js","component/AddSkillForm.js","component/Header.js","App.js","serviceWorker.js","index.js"],"names":["SkillChart","StaffList","props","handleClick","event","setState","currentPage","Number","target","id","onChangename","updatedList","filtername","value","state","result","filter","item","employee_name","toLowerCase","search","console","log","todosPerPage","this","categories","title","renderTodos","map","todo","index","key","onClick","action","employee_id","className","type","onChange","placeholder","Component","Proficiency","SkillList","tagcloud","cloudArray","techlist","techArray","forEach","a","push","employee_tech","b","i","technology","profValue","Set","sort","htmlSum","cc","eachTech","eachRow","length","styles","0","fontSize","fontWeight","1","2","opacity","3","4","5","6","each","style","setInterval","forceUpdate","TechCloud","fontFamily","fontStyle","color","randomColor","padding","width","height","e_name","technologyArray","uniqueTechnologyArray","uniqueProficiencyArray","data","employeelist","techId","et","labels","datasets","label","backgroundColor","borderColor","empId","indexOf","remove_dupli","options","scales","yAxes","stacked","ticks","stepSize","min","max","ChartDisplay","SkillChartDemo","statustechid","statusempId","AddSkill","AddSkillForm","handleChange","values","previousSibling","innerHTML","objFound_bool","name","onChangeUsername","e","onChangeId","handleChangemanager","employee_manager","onSubmit","preventDefault","loading","resultdata","skillentry","axios","post","then","res","success","document","getElementById","reset","getElementsByTagName","catch","error","loader","sending","disabled","defaultValue","Header","App","addskill","addSkill","showGraph","list","get","response","statusshowGraph","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0c3bb29.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport {Bar} from 'react-chartjs-2';\n\n\nfunction SkillChart(props) {\n  var e_name,valueofpro ,sortedVal = [], technologyArray = [] , uniqueTechnologyArray = [],proficiencyArray = [],uniqueProficiencyArray = [];\n\n  props.result.forEach(a => {\n    if(a.id === props.empId)\n    {\n      e_name =a.employee_name;\n    technologyArray.push(...a.employee_tech.map((b,i) =>b.technology ))\n      uniqueProficiencyArray.push(...a.employee_tech.map((b,i) =>b.proficiency ))\n      }\n  })\n  let remove_dupli = (technologyArray) => technologyArray.filter((each,i) => technologyArray.indexOf(each) === i)\nuniqueTechnologyArray.push(...remove_dupli(technologyArray));\n\n  uniqueProficiencyArray.forEach(self => {\n  switch (self) {\n    case \"Proffesional\":\n  valueofpro = 100;\n  sortedVal.push(valueofpro)\n      break;\n      case \"Expert\":\n    valueofpro = 80;\n    sortedVal.push(valueofpro)\n        break;\n        case \"Intermediate\":\n      valueofpro = 60;\n      sortedVal.push(valueofpro)\n          break;\n          case \"Beginner\":\n        valueofpro = 20;\n        sortedVal.push(valueofpro)\n            break;\n            case \"Novice\":\n          valueofpro = 0;\n          sortedVal.push(valueofpro)\n              break;\n    default:\n\n  }})\n\n  const data =  {\n    labels: [...uniqueTechnologyArray],\n    datasets: [\n      {\n  \t\tlabel: e_name + \"'s Skill Matrix\",\n      backgroundColor: [\n        '#FF6384',\n        '#4BC0C0',\n        '#FFCE56',\n        '#E7E9ED',\n        '#36A2EB'\n      ],\n  \t\tborderColor: 'rgba(255,99,132,1)',\n  \t\tdata: sortedVal\n      }\n    ]\n  };\n\n    return (\n\n        <div className=\"PolarChart\">\n<Bar  data={data}    options={{\n                        maintainAspectRatio: true,\n                        scales: {\n                           yAxes: [{\n                               ticks: {\n                                   min: 0,\n                               }\n                           }]\n                       }\n                    }}   />\n\n        </div>\n\n\n\n    )\n}\n\nexport default SkillChart\n","import React, { Component } from \"react\";\nimport SkillChart from \"./SkillChart.js\"\n\n  class StaffList extends Component {\n      constructor(props) {\n          super(props);\n          this.state = {\n            currentPage: 1,\n            todosPerPage: 6,\n            result:[]\n          };\n\n    }\n    handleClick = (event) => {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    }\n    onChangename =(event) =>{\n      var updatedList = [];\n      var filtername= event.target.value;\n      updatedList = this.state.result.filter(function(item){\n        return item.employee_name.toLowerCase().search(\n          filtername.toLowerCase()) !== -1;\n      });\n      this.setState({\n        result:updatedList\n      })\n      console.log(this.state.result)\n     }\n    static getDerivedStateFromProps(props, state) {\n            return {result: props.result };\n          }\n          componentWillMount() {\n            this.setState({categories: [\n                {\n                    id: 1,\n                    title: \"Home\",\n                },\n                {\n                    id: 2,\n                    title: \"Gallery\",\n                }\n            ]});\n        }\n  render() {\n    const renderTodos =  this.state.result.map((todo, index) => {\n      return <p  key={index} onClick={() => this.props.action(todo.employee_id,0)} >{todo.employee_name}</p>\n    });\n\n   \n\n\n    return (\n        <div className=\"skillmatrix\">\n        <div className=\"staff_list_cover\">\n<h1>Staff List</h1>\n        <input type=\"text\" onChange={this.onChangename} placeholder=\"Search The Staff\"/>\n          <div className=\"staff_list\">\n          <div>\n           <div className=\"stafflist\">\n              {renderTodos}\n              </div>\n\n\n          </div>\n        \n          </div>\n\n        </div>\n        </div>\n\n\n\n    )\n}\n}\nexport default StaffList\n","import React, {Component} from \"react\"\r\n\r\nfunction Proficiency(props) {\r\n  var proficiencyArray = [] , abc = [];\r\n  props.result.forEach(a => {\r\n    proficiencyArray.push(...a.employee_tech.map((b,i) =>b.proficiency ))\r\n  })\r\nconst unq =[...new Set(proficiencyArray)];\r\nunq.forEach(each => {\r\n  abc.push(<div>{each}</div>)\r\n})\r\nreturn (\r\n  <div className = \"proficiencyBox\" >\r\n  <h1>Proficiency Level</h1>\r\n  <div className=\"d-flex proficiencylist\">\r\n   {abc}\r\n   </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Proficiency\r\n","import React, { Component } from \"react\";\nimport TagCloud from \"react-tag-cloud\";\nimport randomColor from \"randomcolor\";\n\nclass SkillList extends Component {\n  componentDidMount() {\n    setInterval(() => {\n      this.forceUpdate();\n    }, 3000);\n  }\n  tagcloud = (props) => {\n    var cloudArray = [],\n      techlist = [],\n      techArray = [];\n    this.props.result.forEach(a => {\n      techArray.push(...a.employee_tech.map((b, i) => b.technology));\n      cloudArray.push(\n        ...a.employee_tech.map((b, i) => [b.technology, b.profValue])\n      );\n    });\n    techArray = [...new Set(techArray)];\n    cloudArray.sort();\n    var htmlSum = 0;\n    var arr = [],\n      cc = [];\n    for (let eachTech = 0; eachTech < cloudArray.length; eachTech++) {\n      \n     \n      cloudArray.forEach(eachRow => {\n        if (eachRow[0] === techArray[eachTech]) {\n          htmlSum += Number(eachRow[1]);\n        } else if (htmlSum !== 0) {\n          cc.push([htmlSum, eachRow[0]]);\n          htmlSum = 0;\n        }\n      });\n    }\n  cc.sort(function(a, b) {\n      return a[0] < b[0] ? 1 : -1;\n    });\n    const styles = {\n      0: {\n       \n      fontSize: 100,\n      fontWeight: \"bold\"\n      },\n      1: {\n        \n        fontSize: 75,\n        fontWeight: \"bold\"\n        },\n      2: {\n        \n      fontSize:50,\n      opacity: 0.7\n      },\n      3: {\n        \n        fontSize: 35,\n        opacity: 0.7\n        },\n        4: {\n        \n          fontSize: 25,\n          opacity: 0.7\n          },\n         5: {\n        \n            fontSize: 20,\n            opacity: 0.7\n            },\n           6: {\n        \n              fontSize: 16,\n              opacity: 0.7\n              }\n    };\n\ntechlist.push(...cc.map((each,i) =><div key={i}  onClick={() => this.props.action(0,each[1])} style={styles[i]}>{each[1]}</div> ))\nreturn techlist;\n  };\n\n  render() {\n    const TechCloud = this.tagcloud();\n  return (\n      <div className=\"app-outer\">\n        <h1>Skill Cloud</h1>\n        <div className=\"app-inner\">\n          <TagCloud\n            className=\"tag-cloud\"\n            style={{\n              fontFamily: \"sans-serif\",\n              fontSize: 30,\n              fontWeight: \"bold\",\n              fontStyle: \"italic\",\n              color: () => randomColor(),\n              padding: 5,\n              width: \"100%\",\n              height: \"100%\"\n            }}\n          >\n            {TechCloud}\n          </TagCloud>\n        </div>\n      </div>\n    );\n  }\n}\nexport default SkillList;\n","import React, { Component } from \"react\"\nimport {Bar} from 'react-chartjs-2';\n\n\nfunction SkillChart(props) {\n  var e_name,technologyArray = [] , uniqueTechnologyArray = [],uniqueProficiencyArray = [];\n  var data=[];\n  var employeelist = [];\nif(props.techId){\n\n  props.result.forEach(item => {\n    item.employee_tech.map((et) => {\n      if(et.technology ===props.techId){\n        employeelist.push(item.employee_name)\n        uniqueProficiencyArray.push(et.profValue)\n      } \n    })\n  })\n \n  \n     data =  {\n      labels: [...employeelist],\n      datasets: [\n        {\n        label: props.techId + \"'s Skill Matrix\",\n        backgroundColor: [\n          '#FF6384',\n          '#4BC0C0',\n          '#FFCE56',\n          '#E7E9ED',\n          '#36A2EB',\n          '#ffc0f6',\n          '#86c5f6'\n        ],\n        borderColor: 'rgba(255,99,132,1)',\n        data: uniqueProficiencyArray\n        }\n      ]\n    };\n  \n}else if(props.empId){\n  props.result.forEach(a => {\n    if(a.employee_id === props.empId)\n    {\n      e_name =a.employee_name;\n    technologyArray.push(...a.employee_tech.map((b,i) =>b.technology ))\n  uniqueProficiencyArray.push(...a.employee_tech.map((b,i) =>b.profValue ))\n      }\n  })\n  let remove_dupli = (technologyArray) => technologyArray.filter((each,i) => technologyArray.indexOf(each) === i)\nuniqueTechnologyArray.push(...remove_dupli(technologyArray));\n\n\n   data =  {\n    labels: [...uniqueTechnologyArray],\n    datasets: [\n      {\n      label: e_name + \"'s Skill Matrix\",\n      backgroundColor: [\n        '#FF6384',\n        '#4BC0C0',\n        '#FFCE56',\n        '#E7E9ED',\n        '#36A2EB',\n        '#ffc0f6',\n        '#86c5f6'\n      ],\n      borderColor: 'rgba(255,99,132,1)',\n      data: uniqueProficiencyArray,\n      \"position\": \"top\",\n     \n      }\n    ]\n  };\n}\n\n    return (\n\n        <div className=\"PolarChart\">\n<Bar  data={data} height={null}\n        width={null} options={{\n\n                        scales: {\n                          yAxes: [{\n                            stacked: true,\n                             ticks: {\n                              stepSize: 25,\n                                 min:0,\n                                 max:100\n                             }\n                         }]\n                       }\n                    }}   />\n\n        </div>\n\n\n\n    )\n}\n\nexport default SkillChart\n","import React, { Component } from \"react\";\nimport SkillChartDemo from \"./SkillChartDemo.js\"\n\nclass ChartDisplay extends Component {\n  constructor(props) {\n      super(props);\n}\n\n  render() {\n    return (\n<SkillChartDemo techId={this.props.statustechid}   empId={this.props.statusempId}  result={this.props.result} />\n    );\n  }\n}\nexport default ChartDisplay;\n","import React, { Component } from \"react\";\n\n  class AddSkill extends Component {\n      constructor(props) {\n          super(props);\n\n\n    }\n\n  render() {\n    return (\n        <div className=\"addskill mb-3\">\n          <button  onClick={this.props.action} type=\"button\" className=\"btn btn-warning\">Add Skills</button>\n        </div>\n\n\n\n    )\n}\n}\nexport default AddSkill\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class AddSkillForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading :false,\n      employee_name: '',\n      employee_manager: '',\n      employee_id:'',\n      employee_tech: []\n    };\n  }\n  componentDidMount(){\n    this.setState({\n      employee_name: '',\n      employee_manager: '',\n      employee_id:'',\n      employee_tech: []\n    });\n\n  }\n    handleChange = (event) => {\n      const  employee_tech = [...this.state.employee_tech];\n      var values = [0,25,50,75,100];\n      event.target.previousSibling.innerHTML=values[event.target.value];\n      var objFound_bool = false;\n      for (var i = 0; i < employee_tech.length; i++) {\n        if( employee_tech[i].technology === event.target.name){\n          objFound_bool = true;\n          employee_tech[i].profValue =values[event.target.value] ;\n        }\n      }\n      if(!objFound_bool){\n        employee_tech.push({\n          technology:event.target.name,\n          profValue:values[event.target.value]\n        })\n      }\n      this.setState( {employee_tech: employee_tech})\n  };\n\n\n  onChangeUsername = (e) => {\n    this.setState({\n      employee_name: e.target.value\n    })\n  }\n  onChangeId = (e) => {\n    this.setState({\n      employee_id: e.target.value\n    })\n  }\n  handleChangemanager = (e) => {\n    this.setState({\n      employee_manager: e.target.value\n    })\n  }\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.setState({loading:true});\n    const skillentry = {\n      employee_name: this.state.employee_name,\n      employee_manager: this.state.employee_manager,\n      employee_id: this.state.employee_id,\n      employee_tech:this.state.employee_tech\n    }\nlet resultdata;\n    axios.post('http://localhost:5000/users/add', skillentry)\n      .then(res => {\n                resultdata=<div className='alert alert-success'>sumitted successfully</div>;\n             \n         this.setState({\n           loading:false,\n          success:resultdata,\n          employee_name: '',\n          employee_manager: '',\n          employee_id:'',\n          employee_tech: [] \n        }) ;\n        document.getElementById(\"myForm\").reset(); \n        document.getElementById(\"myForm\").getElementsByTagName(\"span\").innerHTML=0; \n       })\n\n      .catch( error => {\n        resultdata=<div className='alert alert-danger'>Failed!! Please Retry</div>;\n        this.setState({\n          loading:false,\n          success:resultdata\n        }) ;\n      \n      });\n     \n  }\n\n  render() {\n    let loader,sending;\n    if (this.state.success) {\n      sending=<div>{this.state.success}</div>\n    }\n    if (this.state.loading) {\n      loader = <div><div className=\"loader\"></div><div className=\"loaderbg\"></div></div>;\n    } \n    \n    return (\n     \n      <div>\n        {loader}\n        {sending}\n        <h3>Add Your SkillSet</h3>\n      <form id=\"myForm\" className=\"skilladd  text-left border border-light p-5\" onSubmit={this.onSubmit}>\n\n      <input type=\"text\" name=\"employee_name\" className=\"form-control mb-4\" placeholder=\"Employee Name\"  value={this.state.employee_name} onChange={this.onChangeUsername}/>\n      <input type=\"text\" name=\"employee_id\" className=\"form-control mb-4\" placeholder=\"Employee ID\"  value={this.state.employee_id} onChange={this.onChangeId}/>\n<div><label>Manager</label>\n      <select name=\"employee_manager\" className=\"browser-default manager-select mb-4\" value={this.state.employee_manager} onChange={this.handleChangemanager}>\n          <option value=\"\" disabled>Choose option</option>\n          <option value=\"manager1\">Manager1</option>\n          <option value=\"manager1\">Manager2</option>\n      </select>\n    </div>\n<h2>SKILLS</h2>\n<div className=\"text-center\">\n<div>\n<label>php</label> <span>0</span>\n<input name=\"php\" type=\"range\" min=\"0\" max=\"4\"  defaultValue=\"0\" className=\"slider\"   onChange={this.handleChange} />\n</div>\n<div>\n<label >css</label> <span>0</span>\n<input type=\"range\"  name=\"css\" min=\"0\" max=\"4\" defaultValue=\"0\" className=\"slider\"   onChange={this.handleChange} />\n</div>\n<div>\n<label>js</label> <span>0</span>\n<input type=\"range\" name=\"js\" min=\"0\" max=\"4\"  defaultValue=\"0\" className=\"slider\"  onChange={this.handleChange} />\n</div>\n<div>\n<label>VueJs</label> <span>0</span>\n<input type=\"range\" name=\"VueJs\" min=\"0\" max=\"4\" defaultValue=\"0\" className=\"slider\"  onChange={this.handleChange} />\n</div>\n<div>\n<label>jquery</label> <span>0</span>\n<input type=\"range\" min=\"0\" name=\"jquery\" max=\"4\" defaultValue=\"0\" className=\"slider\" onChange={this.handleChange} />\n</div>\n<div>\n<label>Html</label> <span>0</span>\n<input type=\"range\"  name=\"Html\"  min=\"0\" max=\"4\" defaultValue=\"0\" className=\"slider\" onChange={this.handleChange} />\n</div>\n<div>\n<label>angular</label> <span>0</span>\n<input type=\"range\"  name=\"angular\"   min=\"0\" max=\"4\" defaultValue=\"0\" className=\"slider\" onChange={this.handleChange} />\n</div>\n</div>\n<button className=\"btn btn-info btn-block\" type=\"submit\">Send</button>\n\n  </form>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\"\nfunction Header() {\n\n    return (\n      <div className=\"container-fluid bg  mb-2\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n          <h1 className=\"text-center py-4\">Skill Matrix</h1>\n          </div>\n          </div>\n          </div>\n\n    )\n}\n\nexport default Header\n","import React, { Component } from \"react\";\nimport { Router, Route, Switch } from \"react-router\";\nimport \"./App.css\";\nimport jsonData from \"./e_list.json\";\nimport StaffList from \"./component/StaffList.js\"\nimport Proficiency from \"./component/Proficiency.js\"\nimport SkillList from \"./component/SkillList.js\"\nimport SkillChart from \"./component/SkillChart.js\"\nimport ChartDisplay from \"./component/ChartDisplay.js\"\nimport AddSkill from \"./component/AddSkill.js\"\nimport AddSkillForm from \"./component/AddSkillForm.js\"\nimport Header from \"./component/Header.js\"\nimport axios from 'axios';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { empId:'',techId:'',showGraph:false,addSkill: false, list:[]};\n    }\n    componentDidMount(){\n    \n      axios.get('http://localhost:5000/users/')\n      .then(response => {\n        const list = response.data;\n        this.setState({ list: list });\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n    }\n    addskill = () =>{\n      this.setState({\n        addSkill:true\n      })\n\n\n    }\n    showGraph = (employee_id=0,techId=0) => {\n          this.setState({\n            showGraph:true,\n            empId:employee_id,\n            techId:techId\n          })\n    }\n    render() {\n\n        return (\n          <div >\n          <Header/>\n\n          <div className=\"container\">\n            <div className=\"row\">\n<div className=\"col-sm-8\">\n  <SkillList action={this.showGraph} result={this.state.list} />\n              </div>\n              <div className=\"col-sm-4\">\n                <AddSkill action={this.addskill} />\n          <StaffList action={this.showGraph}  result={this.state.list} />\n              </div>\n            </div>\n          </div>\n          <div className=\"w-100\"></div>\n          <div className=\"container \">\n            <div className=\"row\">\n                <div className=\"col-sm-7\">\n                  {this.state.showGraph && (\n <ChartDisplay statustechid={this.state.techId}  statusempId={this.state.empId} statusshowGraph={this.state.showGraph}   result={this.state.list} />)}\n  {this.state.addSkill && <AddSkillForm/>}\n          </div>\n          </div>\n          </div>\n  </div>\n\n        );\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}